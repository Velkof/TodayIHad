@model TodayIHad.Domain.Entities.Food

@{
    ViewBag.Title = "Edit";
}

<h2>Update "@Model.Name"?</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class = "control-label col-md-2">Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2">Calories</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaloriesKcal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CaloriesKcal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2">Protein</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProteinGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProteinGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Fat</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Carbs</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarbsGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarbsGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Fiber</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FiberGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FiberGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Sugar</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SugarGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SugarGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Sodium (mg)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SodiumMg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SodiumMg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Saturated Fat</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatSatGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatSatGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Mono. Fat</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatMonoGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatMonoGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Poly. Fat</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatPolyGr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatPolyGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Cholesterol (mg)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CholesterolMg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CholesterolMg, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
