@*@model IEnumerable<TodayIHad.Domain.Entities.Food>*@

@model TodayIHad.Domain.Entities.Food


@{
    ViewBag.Title = "Index";
}

<br /><br />




<div class="userFoodContainer container">

    <h3>Create New Food</h3>

    <h5>Or scroll down to view, edit or delete your custom foods.</h5>
    <br />

    @*@using (Html.BeginForm("Create", "Foods", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-horizontal">
            <h4>Food</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@
@using (Html.BeginForm("Create", "Foods", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="userFoodForm form-group col-md-8">
        <div class="row form-group">
            <div class="col-xs-12">
                <label>Food Name</label>
                @*<input type="text" autofocus="autofocus" id="userFoodName" class="form-control" />*@
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus", @id = "userFoodName" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
         </div>
        <div class="row form-group">
            <div class="col-xs-4 col-sm-5">
                <label>Amount</label>
                <input type="number" value="100" id="userFoodAmount" class="form-control" />
            </div>
            <div class="col-xs-5 col-sm-5">
                <div class="row">
                    <label class="col-xs-6">Unit</label>
                </div>
                <select id="userFoodUnit" class="form-control">
                    <option value="gr" selected>gr</option>
                    <option value="oz">oz</option>
                </select>
            </div>
            <div class="col-xs-3 col-sm-2" id="unitAddOrRemove">
                <div class="row">
                    <label></label>
                </div>
                <div id="unitGlyphiconsContainer">
                    <span class="glyphicon glyphicon-plus gi-2x"></span>
                    <span class="glyphicon glyphicon-minus gi-2x"></span>
                </div>
            </div>
        </div>

        <h5 class="alert alert-danger" role="alert">Recommended fields. All values below should be for 100 gr of food.</h5>

        <div class="row form-group">
            <div class="col-xs-6">
                <label>Calories</label>
                @*<input type="number" id="userFoodCalories" class="form-control" />*@
                @Html.EditorFor(model => model.CaloriesKcal, new { htmlAttributes = new { @class = "form-control", @id = "userFoodCalories" } })
                @Html.ValidationMessageFor(model => model.CaloriesKcal, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-6">
                <label>Carbs (g)</label>
                @*<input type="number" id="userFoodCarbs" class="form-control" />*@
                @Html.EditorFor(model => model.CarbsGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodCarbs" } })
                @Html.ValidationMessageFor(model => model.CarbsGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-xs-6">
                <label>Protein (g)</label>
                @*<input type="number" id="userFoodProtein" class="form-control" />*@
                @Html.EditorFor(model => model.ProteinGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodProtein" } })
                @Html.ValidationMessageFor(model => model.ProteinGr, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-6">
                <label>Fat (g)</label>
                @*<input type="number" id="userFoodFat" class="form-control" />*@
                @Html.EditorFor(model => model.FatGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFat" } })
                @Html.ValidationMessageFor(model => model.FatGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div><h5 class="alert alert-success" role="alert">Optional fields.</h5></div>

        <div class="row form-group">
            <div class="col-xs-6">
                <label>Saturated Fat (g)</label>
                @*<input type="number" id="userFoodFatSat" class="form-control" />*@
                @Html.EditorFor(model => model.FatSatGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFatSat" } })
                @Html.ValidationMessageFor(model => model.FatSatGr, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-6">
                <label>Mono. Fat (g)</label>
                @*<input type="number" id="userFoodFatMono" class="form-control" />*@
                @Html.EditorFor(model => model.FatMonoGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFatMono" } })
                @Html.ValidationMessageFor(model => model.FatMonoGr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-xs-6">
                <label>Poly. Fat (g)</label>
                @*<input type="number" id="userFoodFatPoly" class="form-control" />*@
                @Html.EditorFor(model => model.FatPolyGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFatPoly" } })
                @Html.ValidationMessageFor(model => model.FatPolyGr, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-6">
                <label>Cholesterol (mg)</label>
                @*<input type="number" id="userFoodCholes" class="form-control" />*@
                @Html.EditorFor(model => model.CholesterolMg, new { htmlAttributes = new { @class = "form-control", @id = "userFoodCholes" } })
                @Html.ValidationMessageFor(model => model.CholesterolMg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-xs-6">
                <label>Fiber (g)</label>
                @*<input type="number" id="userFoodFiber" class="form-control" />*@
                @Html.EditorFor(model => model.FiberGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFiber" } })
                @Html.ValidationMessageFor(model => model.FiberGr, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-6">
                <label>Sugar (g)</label>
                @*<input type="number" id="userFoodSugar" class="form-control" />*@
                @Html.EditorFor(model => model.SugarGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodSugar" } })
                @Html.ValidationMessageFor(model => model.SugarGr, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="row form-group">
            <div class="col-xs-6">
                <label>Sodium (mg)</label>
                @*<input type="number" id="userFoodSodium" class="form-control" />*@
                @Html.EditorFor(model => model.SodiumMg, new { htmlAttributes = new { @class = "form-control", @id = "userFoodSodium" } })
                @Html.ValidationMessageFor(model => model.SodiumMg, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Create Food" class="btn btn-success" />
        </div>
    </div>
}
        <br /><br />

        <div class="userFoodList col-md-8">
            <h3>My Foods</h3>

            <table class="table">
                @*<tr>
                        <th>
                            My Foods
                        </th>

                        <th>

                        </th>
                    </tr>*@

                @*@foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            </td>
                        </tr>
                    }*@

            </table>


            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        </div>

