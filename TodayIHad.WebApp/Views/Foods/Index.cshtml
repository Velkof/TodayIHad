@model TodayIHad.Domain.Entities.Food


@{
    ViewBag.Title = "Index";
}

<br /><br />

<div class="userFoodContainer container">

    <h3>Create New Food - Step <span id="createFoodStepNum">1</span> of 2</h3>

    <br />

    @using (Html.BeginForm("Create", "Foods", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="userFoodForm form-group col-md-8">
            <div id="createFoodStep1">

                <div class="row form-group">
                    <div class="col-xs-12">
                        <label>Food Name</label>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "userFoodName" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-6">
                        <label>Amount</label>
                        <input type="number" value="100" id="userFoodAmount" class="form-control" />
                    </div>
                    <div id="foodUnitsContainer" class="col-xs-6">
                        <div class="row">
                            <label class="col-xs-6">Unit</label>
                            <a id="addUnit" href="#">[Add]</a>

                        </div>
                        <select id="userFoodUnit" class="form-control" name="userFoodUnit">
                            <option id="optionGr" value="gr" data-gramweight="1" selected>gr</option>
                            <option id="optionOz" value="oz" data-gramweight="28.35">oz</option>
                        </select>

                    </div>
                </div>
                <div id="addUnitContainer"></div>
                <button id="continueBtn" class="btn btn-info"> Continue to Step 2 of 2</button>

            </div>
            <div id="createFoodStep2">


                <div class="alert alert-danger" role="alert">All values below should be per: <span id="createFoodPerAmount">100 gr.</span></div>

                <input type="hidden" id="gramsTotal" name="gramsTotal" value="100" />
                <input type="hidden" id="foodUnits" name="foodUnits" value="" />


                <div class="row form-group">
                    <div class="col-xs-6">
                        <label>Calories</label>
                        @Html.EditorFor(model => model.CaloriesKcal, new { htmlAttributes = new { @class = "form-control", @id = "userFoodCalories", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.CaloriesKcal, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-6">
                        <label>Protein (g)</label>
                        @Html.EditorFor(model => model.ProteinGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodProtein", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.ProteinGr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-xs-6">
                        <label>Fat (g)</label>
                        @Html.EditorFor(model => model.FatGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFat", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.FatGr, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-6">
                        <label>Carbs (g)</label>
                        @Html.EditorFor(model => model.CarbsGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodCarbs", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.CarbsGr, "", new { @class = "text-danger" })
                    </div>
                </div>

               

                <div class="row form-group">
                    <div class="col-xs-6">
                        <label>Saturated Fat (g)</label>
                        @Html.EditorFor(model => model.FatSatGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFatSat", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.FatSatGr, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-6">
                        <label>Fiber (g)</label>
                        @Html.EditorFor(model => model.FiberGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFiber", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.FiberGr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-xs-6">
                        <label>Mono. Fat (g)</label>
                        @Html.EditorFor(model => model.FatMonoGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFatMono", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.FatMonoGr, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-6">
                        <label>Sugar (g)</label>
                        @Html.EditorFor(model => model.SugarGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodSugar", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.SugarGr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-xs-6">
                        <label>Poly. Fat (g)</label>
                        @Html.EditorFor(model => model.FatPolyGr, new { htmlAttributes = new { @class = "form-control", @id = "userFoodFatPoly", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.FatPolyGr, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-6">
                        <label>Sodium (mg)</label>
                        @Html.EditorFor(model => model.SodiumMg, new { htmlAttributes = new { @class = "form-control", @id = "userFoodSodium", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.SodiumMg, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-xs-6">
                        <label>Cholesterol (mg)</label>
                        @Html.EditorFor(model => model.CholesterolMg, new { htmlAttributes = new { @class = "form-control", @id = "userFoodCholes", @placeholder = 0 } })
                        @Html.ValidationMessageFor(model => model.CholesterolMg, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="form-group">
                    <button id="cancelBtnCreateFood" class="btn btn-default">Cancel</button>
                    <input type="submit" id="createFoodBtn" value="Create Food" class="btn btn-success" />
                </div>
            </div>
        </div>
    }


</div>
<br /><br />


<div id="userFoodList" class="col-md-8">
    <h3>My Foods</h3>

    <table class="table">
        @foreach (var item in ViewBag.ListOfFoods)
            {
                <tr>
                    <td>
                        <a href="@Url.Action("Edit/"+@item.Id)">@item.Name</a>
                    </td>
                    <td class="actionContainerMyFoods">
                        <a href="@Url.Action("Delete/"+@item.Id)"><span class="glyphicon glyphicon-trash"></span></a>
                    </td>
                </tr>
            }
    </table>
</div>

<script id="addFoodUnitTemplate" type="text/mustachetemplates">
    <div id="addFoodUnit" class="row form-group">

        <div id="headerAddUnit" class="row form-group col-xs-12">

            <div class="col-xs-10" id="addNewUnitHeading">
                <div>
                    Add or remove units

                </div>
            </div>
            <div class="closeBtnContainer">
                <button id="closeBtnAddUnit" class="glyphicon glyphicon-remove btn btn-default"></button>
            </div>
        </div>

        <div id="unitList" class="col-xs-12 col-md-6">
            <label>Your  units</label>
            <table id="addUnitTable" class="table table-condensed">
                {{#unitsArray}}
                <tr>
                    <td class="col-xs-2"><input type='checkbox' name='checkboxUnit' id='{{Id}}'></td>
                    <td class="col-xs-7" id='nameUnit'> {{Name}} </td>
                    <td class="col-xs-3" id='weightInGramsUnit'> {{GramWeight}}  g</td>
                </tr>
                {{/unitsArray}}
            </table>
        </div>
        <div id="actionContainerAddUnit" class="col-xs-12 col-md-6">

            <label>Name</label>
            <input type="text" id="nameAddUnit" class="form-control" placeholder="e.g. - slice, cup..." />

            <label>Weight in grams</label>
            <input type="number" id="weightInGramsAddUnit" class="form-control" placeholder="0" />

        </div>

        <div id="unitBtnContainer" class="row col-xs-12">
            <input type="button" id="deleteUnitBtn" class="btn btn-danger" value="Delete Selected"/>
            <input type="button" id="addUnitBtn" class="btn btn-success " value="Add Unit" />
        </div>
    </div>




</script>